package model;

import java.sql.*;
import java.sql.DriverManager;

public class DBHelper {

    Statement statement;
    ResultSet resultSet;
    String sqlString;

    public static void connect(){
/*
Server: db4free.net
DatabaseName: kinoempire
Username: kino123
Password: kinoempire
Port number: 3306
 */
        try{
            String url = "jdbc:mysql://db4free.net:3306/kinoempire?useSSL=false";

            Class.forName("com.mysql.jdbc.Driver").newInstance();

            Connection connection = DriverManager.getConnection(url, "kino123", "kinoempire");

            System.out.println(connection);
            connection.close();
        } catch(Exception e){
            e.printStackTrace();
        }
    }

    public void update() {

    }

    public void select() {

    }

    public void insert() {

    }

    public void delete() {

    }

}

/*-- MySQL Script generated by MySQL Workbench
-- 09/20/16 11:41:47
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema KinoXP
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema KinoXP
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `KinoXP`;
CREATE SCHEMA IF NOT EXISTS `KinoXP` DEFAULT CHARACTER SET utf8 ;
USE `KinoXP` ;

-- -----------------------------------------------------
-- Table `KinoXP`.`Movies`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `KinoXP`.`Movies` ;

CREATE TABLE IF NOT EXISTS `KinoXP`.`Movies` (
  `Title` VARCHAR(45) NOT NULL,
  `Genre` VARCHAR(45) NULL,
  `Length` INT NULL,
  `Description` VARCHAR(45) NULL,
  `Numbers Sold` INT NULL,
  `Price 1` INT NULL,
  `Price 2` INT NULL,
  `Director` VARCHAR(45) NULL,
  `Copyright` VARCHAR(45) NULL,
  `Original Title` VARCHAR(45) NULL,
  `Versions` VARCHAR(45) NULL,
  `Age Restriction` INT NULL,
  PRIMARY KEY (`Title`));


-- -----------------------------------------------------
-- Table `KinoXP`.`Shows`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `KinoXP`.`Shows` ;

CREATE TABLE IF NOT EXISTS `KinoXP`.`Shows` (
  `show_id` INT NOT NULL,
  `Title` VARCHAR(45) NULL,
  `Date` DATE NULL,
  `Time` INT NULL,
  `Theater` INT NULL,
  PRIMARY KEY (`show_id`),
  INDEX `fk_movies_idx` (`Title` ASC),
  CONSTRAINT `fk_movies`
    FOREIGN KEY (`Title`)
    REFERENCES `KinoXP`.`Movies` (`Title`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `KinoXP`.`Customers`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `KinoXP`.`Customers` ;

CREATE TABLE IF NOT EXISTS `KinoXP`.`Customers` (
  `E-mail` VARCHAR(45) NOT NULL,
  `Name` VARCHAR(45) NULL,
  `Phone Number` INT NULL,
  PRIMARY KEY (`E-mail`));


-- -----------------------------------------------------
-- Table `KinoXP`.`Log`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `KinoXP`.`Log` ;

CREATE TABLE IF NOT EXISTS `KinoXP`.`Log` (
  `sales_id` INT NOT NULL,
  `Show` INT NULL,
  `Customer` VARCHAR(45) NULL,
  `Seat` VARCHAR(45) NULL,
  `Time` INT NULL,
  `Status` VARCHAR(45) NULL,
  PRIMARY KEY (`sales_id`),
  INDEX `fk_show_idx` (`Show` ASC),
  INDEX `fk_customer_idx` (`Customer` ASC),
  CONSTRAINT `fk_show`
    FOREIGN KEY (`Show`)
    REFERENCES `KinoXP`.`Shows` (`show_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_customer`
    FOREIGN KEY (`Customer`)
    REFERENCES `KinoXP`.`Customers` (`E-mail`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
*/